// INSERTION IN LINKED LIST(BEGINNING,END, AT A GIVEN POSITION)
public class Geeks {
    Node head;
    class Node{
        int data;
        Node next;
        Node(int d){
            data=d;
            next=null;
        }
    }
    
    public void insertbeg(int d){
        Node temp=new Node(d);
        if(head==null){
            head=temp;
            return;
        }
        temp.next=head;
        head=temp;
    }
    
    public void insertend(int d){
        Node temp=new Node(d);
        if(head==null){
            head=temp;
            return;
        }
        Node cur=head;
        while(cur.next!=null){
            cur=cur.next;
        }
        cur.next=temp;
    }
    
    public void insertmid(int pos,int d){
        Node temp=new Node(d);
        int count=0;
        if(head==null){
            if(pos==1){
            head=temp;
            }else{
                System.out.print("Wrong position");
            }
            return;
        }
        Node cur=head;
        while(cur!=null){
            count++;
            cur=cur.next;
        }
        if(pos>count){
            System.out.print("Wrong position2");
            return;
        }
        Node prev=head;
        cur=head;
        count=1;
        while(count!=pos){
            prev=cur;
            cur=cur.next;
            count++;
        }
        prev.next=temp;
        temp.next=cur;
    }
    
    public void printlist(){
        if(head==null){
            System.out.println("List is empty");
            return;
        }
        Node cur=head;
        while(cur!=null){
            System.out.print(cur.data + " ");
            cur=cur.next;
        }
        System.out.println();
    }
    
    public static void main(String[] args) {
        Geeks ob=new Geeks();
        ob.printlist();
        ob.insertbeg(3);
        ob.printlist();
        ob.insertbeg(4);
        ob.printlist();
        ob.insertend(5);
        ob.printlist();
        ob.insertmid(2,7);
        ob.printlist();
    }
}

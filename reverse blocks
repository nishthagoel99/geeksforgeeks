
    
/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>
#include<stdlib.h>

struct node{
    int data;
    struct node* next;
};
typedef struct node* NODE;
NODE first=NULL;
//first=NULL;

void insertbeg(int x){
    NODE temp = (NODE)malloc(sizeof(struct node));
    temp->next=NULL;
    temp->data=x;
    if(first==NULL){
        first=temp;
        return;
    }
    temp->next=first;
    first= temp;
}

int getlength(NODE x){
    int count=0;
    NODE cur=x;
    while(cur!=NULL){
        count++;
        cur=cur->next;
    }
    return count;
}

NODE reverseblock(NODE first,int k){
    NODE cur = first;
    NODE prev=NULL;
    NODE next1=NULL;
    int count=0;

    while(cur!=NULL && count<k){
        // printf("hehe");
        next1 = cur->next;
        cur->next=prev;
        // next1->next=cur;
        prev = cur;
        cur = next1;
        // next1 = cur->next;
        count++;
    }
    if(next1!=NULL)
        first->next = reverseblock(next1,k);
    return prev;
}


void display(NODE first){
    NODE cur;
    if(first==NULL){
        printf("empty list");
        return;
    }
    cur=first;
    while(cur!=NULL){
        printf("%d\t",cur->data);
        cur=cur->next;
    }
}


int main()
{
    insertbeg(2);
    insertbeg(3);
    insertbeg(4);
    insertbeg(5);
        insertbeg(6);
    // insertbeg(7);
    // insertbeg(8);
    // insertbeg(9);
    // insertbeg(10);
    display(first);
    printf("linkedlist1\n");
    // first = reverse(first);
    first = reverseblock(first,4);  //k=3
    display(first);
    printf("reversed linkedlist");

}


    
/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>
#include<stdlib.h>

struct node{
    int data;
    struct node* next;
};
typedef struct node* NODE;
NODE first1=NULL,first2=NULL,first3=NULL;
//first=NULL;

void insertbeg1(int x){
    NODE temp = (NODE)malloc(sizeof(struct node));
    temp->next=NULL;
    temp->data=x;
    if(first1==NULL){
        first1=temp;
        return;
    }
    temp->next=first1;
    first1= temp;
}

void insertbeg2(int x){
    NODE temp = (NODE)malloc(sizeof(struct node));
    temp->next=NULL;
    temp->data=x;
    if(first2==NULL){
        first2=temp;
        return;
    }
    temp->next=first2;
    first2= temp;
}


void insertend(int x){
    NODE cur;
    NODE temp = (NODE)malloc(sizeof(struct node));
    temp->next=NULL;
    temp->data=x;
    if(first3==NULL){
        first3=temp;
        return;
    }
    cur=first3;
    while(cur->next!=NULL)
        cur= cur->next;
    cur->next=temp;
}

void display(NODE first){
    NODE cur;
    if(first==NULL){
        printf("empty list");
        return;
    }
    cur=first;
    while(cur!=NULL){
        printf("%d\t",cur->data);
        cur=cur->next;
    }
}

void merge(){
    //printf("heree\n");
    NODE a=first1;
    NODE b=first2;
    if(a!=NULL || b!=NULL){
      //  printf("hahahha\n");
    while(a!=NULL && b!=NULL){
        //printf("hea");
        if(a->data<=b->data){
            insertend(a->data);
            a=a->next;
        }else{
            insertend(b->data);
            b=b->next;
        }
    }
    }
    while(a!=NULL){
        insertend(a->data);
        a=a->next;
    }
    while(b!=NULL){
        insertend(b->data);
        b=b->next;
    }
}

int main()
{
    insertbeg1(10);
    insertbeg1(5);
    insertbeg1(1);

      insertbeg2(20);
          insertbeg2(4);
    insertbeg2(2);
    //insertafternode(5,1);
    display(first1);
    printf("linkedlist1\n");
    display(first2);
    printf("linkedlist2\n");
    merge(first1,first2);
    display(first3);
}
